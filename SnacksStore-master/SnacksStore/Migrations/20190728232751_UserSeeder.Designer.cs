// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SnacksStore.Data;

namespace SnacksStore.Migrations
{
    [DbContext(typeof(SnacksStoreContext))]
    [Migration("20190728232751_UserSeeder")]
    partial class UserSeeder
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SnacksStore.Data.Model.Product", b =>
                {
                    b.Property<string>("ProductId")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("CreatedByUserUserId");

                    b.Property<int>("Likes");

                    b.Property<string>("Name");

                    b.Property<decimal>("Price");

                    b.Property<int>("Stock");

                    b.Property<DateTime?>("UpdatedAt");

                    b.Property<string>("UpdatedBy");

                    b.Property<string>("UpdatedByUserUserId");

                    b.HasKey("ProductId");

                    b.HasIndex("CreatedByUserUserId");

                    b.HasIndex("UpdatedByUserUserId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("SnacksStore.Data.Model.ProductPriceLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ProductId");

                    b.HasKey("Id");

                    b.ToTable("ProductPriceLogs");
                });

            modelBuilder.Entity("SnacksStore.Data.Model.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Active");

                    b.Property<DateTime?>("CreatedAt");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("SnacksStore.Data.Model.User", b =>
                {
                    b.Property<string>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<int>("RolId");

                    b.HasKey("UserId");

                    b.HasIndex("RolId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SnacksStore.Data.Model.Product", b =>
                {
                    b.HasOne("SnacksStore.Data.Model.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserUserId");

                    b.HasOne("SnacksStore.Data.Model.User", "UpdatedByUser")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserUserId");
                });

            modelBuilder.Entity("SnacksStore.Data.Model.User", b =>
                {
                    b.HasOne("SnacksStore.Data.Model.Rol", "Rol")
                        .WithMany("Users")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
